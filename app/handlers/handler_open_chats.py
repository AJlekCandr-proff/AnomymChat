# -*- coding: utf-8 -*-


# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π.
from loguru import logger

import asyncio

import random

from aiogram import Router, F
from aiogram.types import Message

from app.data_base.requests import MyRequests
from app.bot_settings import bot
from app.keyboards.keyboards import *


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞.
router = Router(name=__name__)


# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞.
async def choice_companions(message: Message, user_id: int) -> None:
    """–í –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞
    Message –∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n
    –ò–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±–µ—Ä–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ç–∞–∫ –∂–µ
    –æ—Ç–∫—Ä—ã–ª–∏ –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç —Ü–∏–∫–ª –ø–æ–∏—Å–∫–∞.
      –ï—Å–ª–∏ –≤ —Å–ø–∏—Å–∫–µ –±–æ–ª—å—à–µ —á–µ–º 1 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Ç–æ —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è
    random –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å. –ü—Ä–∏ —ç—Ç–æ–º, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–µ —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å,
    —Ç–æ –æ–±–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –¥–∏–∞–ª–æ–≥ (–î–∏–∞–ª–æ–≥—É –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID)
    –∏ —Ü–∏–∫–ª –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ, –ø–∏—à–µ—Ç—Å—è –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ü–∏–∫–ª –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è.\n
    –§—É–Ω–∫—Ü–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è. """

    dialog_companions = [user_id]
    users_id = await MyRequests.get_columns('SearchUsers', 'user_id')
    users_id = [user_id[0] for user_id in users_id]

    logger.info(f'–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –Ω–∞—Ö–æ–¥—è—â–∏–µ—Å—è –≤ –ø–æ–∏—Å–∫–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞: {users_id}')

    while len(users_id) > 0:
        if len(users_id) > 1:
            companion = random.choice(users_id)

            if companion != user_id:
                dialog_companions.append(companion)

                await MyRequests.add_items('Dialogs', user_1=user_id, user_2=companion)

                for companion in dialog_companions:
                    await MyRequests.delete_line('SearchUsers', 'user_id', companion)

                    await bot.send_message(
                        chat_id=companion,
                        text='–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω!\n\n',
                        reply_markup=Cancel(1),
                    )
                logger.info(f'–ù–∞—á–∞–ª—Å—è –¥–∏–∞–ª–æ–≥ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ {user_id}')

                break

            else:
                logger.info(f'–ü–æ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id} —Å–ª—É—á–∏–ª–∞—Å—å –æ—à–∏–±–∫–∞ –≤ –ø–æ–∏—Å–∫–µ!')
        else:
            await asyncio.sleep(5)

            await message.answer(
                text='üïì –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–∏–π, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏, —á–µ–º –æ–±—ã—á–Ω–æ...\n\n',
            )

            logger.info(
                f'–í —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–∏—Å–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, '
                f'–ø–æ–≤—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞...'
            )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ 'üöÄ –ü–æ–∏—Å–∫ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞'.
@router.message(F.text == 'üöÄ –ü–æ–∏—Å–∫ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞')
async def search_companion(message: Message) -> None:
    """–ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. \n
    –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç –¥–∏–∞–ª–æ–≥. """

    user_id = message.from_user.id
    button_text = message.text

    try:
        user = await MyRequests.get_line('Users', 'user_id', user_id)

        await MyRequests.add_items('SearchUsers', user_id=user_id, full_name=user.full_name)

        if button_text == 'üöÄ –ü–æ–∏—Å–∫ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞':
            await message.answer(
                text='üîé –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞... \n\n',
            )
            logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–∫—Ä—ã–ª –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –≤ –∞–Ω–æ–Ω–∏–º–Ω–æ–º —á–∞—Ç–µ!')

            await choice_companions(message, user_id)

    except Exception as e:
        logger.error(f'An error has occurred {e}')
